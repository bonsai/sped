openapi: 3.0.0
info:
  title: Java Project Manager VSCode Extension API
  version: v1.0.0
  description: API for interacting with the Java Project Manager VSCode Extension.

paths:
  /project:
    get:
      summary: Get project details
      description: Retrieves details about the current Java project.
      responses:
        '200':
          description: Project details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
        '404':
          description: No project found.
        '500':
          description: Internal server error.
    post:
      summary: Create a new project
      description: Creates a new Java project based on the provided details.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProjectRequest'
      responses:
        '201':
          description: Project created successfully.
        '400':
          description: Invalid project details.
        '500':
          description: Internal server error.


components:
  schemas:
    ProjectDetails:
      type: object
      properties:
        name:
          type: string
          description: Project name.
        path:
          type: string
          description: Project path.
        files:
          type: array
          items:
            type: string
          description: List of files in the project.
        dependencies:
          type: array
          items:
            type: string
          description: List of project dependencies.

    NewProjectRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the new project.
        location:
          type: string
          description: Path where the project should be created.
        dependencies:
          type: array
          items:
            type: string
          description: Initial dependencies for the project.

    CommandResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of the command execution (e.g., success, failed).
        message:
          type: string
          description: A message providing more details about the execution.


  securitySchemes:
    apiKeyAuth:  # Example using API key authentication
      type: apiKey
      in: header
      name: X-API-Key

security:
  - apiKeyAuth: [] # Applies API key authentication to all paths


# Example usage of commands via API -  Could be expanded further.
#  /commands/scanProject, /commands/setupProject, /commands/installJDK would be individual paths.
#  This illustrates a general pattern for command execution.

#paths:
#  /commands/{commandName}:
#    post:
#      summary: Execute a command
#      parameters:
#        - in: path
#          name: commandName
#          schema:
#            type: string
#          required: true
#          description: The name of the command to execute (e.g., scanProject, setupProject, installJDK).
#      requestBody: # Optional request body for command parameters
#        content:
#          application/json:
#            schema:
#              type: object # Define parameters specific to each command
#              # Example:
#              # properties:
#              #   projectPath:
#              #     type: string
#      responses:
#        '200':
#          description: Command executed successfully.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/CommandResponse'
#        '400':
#          description: Invalid command or parameters.
#        '500':
#          description: Internal server error during command execution.


